SET FOREIGN_KEY_CHECKS=0;
SET SQL_MODE = "NO_AUTO_VALUE_ON_ZERO";
SET AUTOCOMMIT = 0;
START TRANSACTION;

USE qcm;

INSERT INTO qcms (qcm) VALUES('big_data_generalites');
INSERT INTO qcms (qcm) VALUES('c');
INSERT INTO qcms (qcm) VALUES('cassandra');
INSERT INTO qcms (qcm) VALUES('java');
INSERT INTO qcms (qcm) VALUES('javascript');
INSERT INTO qcms (qcm) VALUES('mongodb');
INSERT INTO qcms (qcm) VALUES('neo4j');
INSERT INTO qcms (qcm) VALUES('php');
INSERT INTO qcms (qcm) VALUES('python');
INSERT INTO qcms (qcm) VALUES('redis');
INSERT INTO qcms (qcm) VALUES('sql');

INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(2, 'c', 1, 'La première édition du langage C date de ', '1970', '1972', '1981', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(3, 'c', 2, 'Le langage C suit le paradigme', 'Impératif', 'Objet', 'Prédicatif', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(4, 'c', 3, 'La dernière norme du langage C date de ', '2011', '2015', '2018', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(5, 'c', 4, 'Le point d\'entrée d\'un programme C est la fonction main()', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(6, 'c', 5, 'La fonction main() renvoie', 'un long', 'un int', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(7, 'c', 6, 'La magnitude du type signed int est de ', '-2 147 483 647 à +2 147 483 647', '-32 767 à +32 767', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(8, 'c', 7, 'Les principaux type scalaires sont char, short, int, long, float, double', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(9, 'c', 8, 'Le type string permet de gérer un tableau de char', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(10, 'c', 9, 'La déclaration d\'une variable suit la syntaxe suivante. Le point virgule final est omis (et ce dans toutes les instructions qui suivront)', 'type nom_de_variable = valeur', 'nom_de_variable type = valeur', 'def type nom_de_variable = valeur', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(11, 'c', 10, 'Tout code C qui gère des entrées/sorties doit inclure la bibliothèque stdio.h', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(12, 'c', 11, 'Quelle est l’instruction correcte pour saisir un char dans une variable nommée car ?', 'scanf(\"%c\", car)', 'scanf(\"%c\", &car)', 'scanf(\"%C\", &car)', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(13, 'c', 12, 'Quelle est l’instruction correcte pour afficher un char d’une variable nommée car ?', 'printf(\"Vous avez saisi : %lc\\n\", car)', 'printf(\"Vous avez saisi : %c\\n\", car)', 'printf(\"Vous avez saisi : %C\\n\", car)', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(14, 'c', 13, 'Quelle écriture est correcte pour comparer i à 1 ?', 'if(i = 1)', 'if(i == 1)', 'if(i === 1)', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(15, 'c', 14, 'Quel est l’opérateur du NON logique ?', '!', ' ^', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(16, 'c', 15, 'Est-il possible de regrouper les « cases » dans un switch ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(17, 'c', 16, 'L’opérateur pour le modulo est ', 'mod', '%', ':', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(18, 'c', 17, 'Quelle est la syntaxe correcte pour définir une constante ?', '#DEFINE CONSTANTE valeur', '#define CONSTANTE valeur (sans point virgule à la fin)', '#define CONSTANTE valeur (avec un point virgule à la fin)', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(19, 'c', 18, 'Il est possible de déclarer des types définis à côté des types pré-définis. Quel exemple est syntaxiquement correct ?', 'typedef int TAB3[3]', 'TYPEDEF int TAB3[3]', 'typedef TAB3[3] of int', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(20, 'c', 19, 'Quelle écriture est correcte pour pouvoir afficher des valeurs de 0 à 5 si i est initialisé à 0 ?', 'while(i  < 6) {', 'while(i < 5) {', 'while(i >= 5) {', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(21, 'c', 20, 'Cette instruction int t[10] permet de ', 'déclarer un tableau de 10 éléments', 'déclarer un tableau dont le dernier indice est 10', 'déclarer un tableau dont la valeur max est 10', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(22, 'c', 21, 'Pour récupérer la taille d’un tableau il faut utiliser ', 'length(nomDuTableau)', 'sizeof(nomDuTableau)', 'nomDuTableau.length', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(23, 'c', 22, 'Quelle est la syntaxe correcte pour déclarer une fonction ?', 'nomDeLaFonction([type argument-1, …, type argument-n]) : type', 'type nomDeLaFonction([argument-1 type, …,  argument-n type]) ', 'type nomDeLaFonction([type argument-1, …, type argument-n]) ', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(24, 'c', 23, 'Quelle est la syntaxe correcte pour déclarer une procédure ?', 'nomDeProcedure([type argument-1, …, argument-n]) {', 'void nomDeProcedure([type argument-1, …, type argument-n]) {', 'void nomDeProcedure([argument-1, …, argument-n]) {', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(25, 'c', 24, 'Quelle déclaration d’une chaîne de caractères est correcte ?', 'char s[7+1] = \"Bonjour\\0\"', 'char s[7] = \"Bonjour\"', 'String s = \"Bonjour\"', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(26, 'c', 25, 'char *string = \"Bonjour\\0\" est correct pour déclarer une chaîne de caractères ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(27, 'c', 26, 'char ^string = \"Bonjour\\0\" est correct pour déclarer une chaîne de caractères ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(28, 'c', 27, 'Quelles sont les instructions qui permettent de déclarer un pointeur et d’affecter une valeur ?', 'int *p  et p = *i', 'int *p  et p = &i', 'int *p  et p = ^i', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(29, 'c', 28, 'Les instructions suivantes int *p et p = &i permettent ?', 'De déclarer un pointeur et de récupérer la valeur de i', 'De déclarer un pointeur et de récupérer l’adresse de la variable i ', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(30, 'c', 29, 'Si l’on déclare une structure selon ce modèle : struct professeur { … quelle est la syntaxe correcte pour déclarer une variable de ce type ?', 'professeur professeur1', 'struct professeur professeur1', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(31, 'c', 30, 'Est-il possible d\'initialiser une structure comme un tableau, par exemple ainsi : struct rectangle rectangle2 = {2, 5}', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(32, 'javascript', 1, 'JavaScript est-il un langage serveur ou client ?', 'Serveur', 'Client', 'Les deux', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(33, 'javascript', 2, 'JavaScript est-il un langage fortement typé ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(34, 'javascript', 3, 'JavaScript est-il un langage compilé ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(35, 'javascript', 4, 'Le langage JavaScript est sensible à la casse ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(36, 'javascript', 5, 'Un procédure JavaScript est déclarée avec le mot réservé suivant :', 'procedure', 'function', 'sub', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(37, 'javascript', 6, 'Une instruction JavaScript se termine toujours par un point-virgule ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(38, 'javascript', 7, 'Pour gérer une date en JavaScript il faut utiliser la classe Date ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(39, 'javascript', 8, 'La fonction alert(\'Texte\') affiche le Texte dans une boîte de dialogue', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(40, 'javascript', 9, 'Les tableaux JavaScript sont immuables : leur taille est définie lors de leur déclaration et ne change pas', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(41, 'javascript', 10, 'La méthode length() de la classe String permet de récupérer la longueur de la chaîne de caractères en JS', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(42, 'javascript', 11, 'La méthode split() de la classe String  en JS explose une chaîne de caractères dans un tableau ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(43, 'javascript', 12, 'Le premier indice d\'une chaîne de caractères est 1 en JS ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(44, 'javascript', 13, 'var T = new Array() déclare un tableau  en JS ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(45, 'javascript', 14, 'var T = new Array() déclare un tableau à clés  en JS ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(46, 'javascript', 15, 'Une clé d\'un tableau à clé est toujours une chaîne de caractères  en JS', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(47, 'javascript', 16, 'T[\"clé\"] = valeur permet d\'ajouter une paire clé/valeur en JS', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(48, 'javascript', 17, 'T[\"clé\"] = valeur permet de modifier une paire clé/valeur en JS', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(49, 'javascript', 18, 'On peut boucler sur un tableau à clés avec une boucle while en JS', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(50, 'javascript', 19, 'var variable = T[\"clé\"] permet de récupérer la valeur d\'une clé en JS', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(51, 'javascript', 20, 'for(var cle in tableau) … tableau[cle] … permet de parcourir un tableau à clés  en JS', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(52, 'javascript', 21, 'La boucle FOR permet de boucler sur une collection avec une variable de contrôle de type String  en JS', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(53, 'javascript', 22, 'L\'instruction window.onload = init() permet d\'exécuter une fonction nommée init au chargement du document HTML', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(54, 'javascript', 23, 'La méthode onfocus permet de coder sur la prise de focus', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(55, 'javascript', 24, 'La méthode onlostfocus permet de coder sur la perte de focus', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(56, 'javascript', 25, 'L\'instruction document.getElementById(\'element\').value permet de récupérer la valeur d\'un élément de formulaire', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(57, 'javascript', 26, 'L\'instruction document.getElementById(\'paragraphe\').innerHTML permet de récupérer le texte d\'un paragraphe', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(58, 'javascript', 27, 'document.getElementById(\"element\").style.attribut = \"valeur\" permet de modifier le CSS d\'un élément', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(59, 'javascript', 28, 'document.getElementById(\"saisie\").style.Back-groundColor = \"black\" colorise en noir le fond de l\'élément identifié par \'saisie\'', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(60, 'javascript', 29, 'setTimeOut() permet d\'exécuter une fonction au bout de n millièmes de secondes', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(61, 'javascript', 30, 'Il est possible de créer un cookie avec JavaScript ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(62, 'php', 1, 'PHP est-il un langage serveur ou client ?', 'Serveur', 'Client', 'Les deux', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(63, 'php', 2, 'PHP est-il un langage fortement typé ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(64, 'php', 3, 'Une procédure PHP est déclarée avec le mot réservé suivant :', 'procedure', 'function', 'sub', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(65, 'php', 4, 'Une instruction PHP se termine toujours par un point-virgule ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(66, 'php', 5, 'Le langage PHP est sensible à la casse ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(67, 'php', 6, 'Pour gérer une date en PHP il faut utiliser la classe Date ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(68, 'php', 7, 'Les tableaux PHP sont immuables : leur taille est définie lors de leur déclaration et ne change pas', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(69, 'php', 8, 'La méthode length() de la classe String permet de récupérer la longueur de la chaîne de caractères', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(70, 'php', 9, 'La méthode split() de la classe String explose une chaîne de caractères dans un tableau ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(71, 'php', 10, 'Le premier indice d\'une chaîne de caractères est 1 ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(72, 'php', 11, '$t = new Array() déclare un tableau ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(73, 'php', 12, '$t = new Array() déclare un tableau associatif ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(74, 'php', 13, 'La clé d\'un tableau associatif est toujours une chaîne de caractères', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(75, 'php', 14, '$t[\"clé\"] = $valeur permet d\'ajouter une paire clé/valeur ', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(76, 'php', 15, '$t[\"clé\"] = $valeur permet de modifier une paire clé/valeur ', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(77, 'php', 16, 'On peut boucler sur un tableau associatif avec une boucle while', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(78, 'php', 17, '$variable = $t[\"clé\"] permet de récupérer la valeur d\'une clé', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(79, 'php', 18, 'foreach($t as $valeur) ... permet de parcourir un tableau associatif', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(80, 'php', 19, 'foreach($t as $cle => $valeur) ... permet de parcourir un tableau associatif et de récupérer les clés et les valeurs', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(81, 'php', 20, 'La boucle FOR permet de boucler sur une collection avec une variable de contrôle de type String', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(82, 'php', 21, 'Pour passer un paramètre par référence il faut ajouter le caractère & devant le nom du paramètre', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(83, 'php', 22, 'PHP 5 est un langage interprété', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(84, 'php', 23, 'PHP 7 est un langage compilé', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(85, 'php', 24, '$_POST est une super globale qui permet de récupérer des données saisies dans un formulaire', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(86, 'php', 25, 'PHP permet de gérer des variables de session avec session_start()', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(87, 'php', 26, 'Cette expression régulière renvoie TRUE : preg_match(\"@^[0-9]{5}$@\", \"75011\")', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(88, 'php', 27, 'La fonction time() de PHP renvoie un timestamp en millisecondes', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(89, 'php', 28, 'PHP permet de faire de la Programmation Orienté Objet ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(90, 'php', 29, 'Il est possible de créer un cookie avec PHP ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(91, 'php', 30, 'Par défaut la durée d\'un cookie est illimitée', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(92, 'python', 1, 'Est-ce que le langage python peut être considéré comme un langage impératif ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(93, 'python', 2, 'Est-ce que le langage python peut être considéré comme un langage fonctionnel ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(94, 'python', 3, 'Est-ce que le langage python peut être considéré comme un langage objet ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(95, 'python', 4, 'Est-ce que le langage python est faiblement typé ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(96, 'python', 5, 'Le symbole de commentaire de ligne est', '//', 'rem', '#', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(97, 'python', 6, 'Les commentaires de bloc sont entre', '/* … */', '\"\"\"', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(98, 'python', 7, 'La commande print est une fonction ou une procédure ?', 'Une fonction', 'Une procédure', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(99, 'python', 8, 'Est-il possible d\'écrire deux instructions sur une même ligne de code ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(100, 'python', 9, 'Quel est le séparateur d\'instructions lorsque l\'on écrit 2 instructions sur la même ligne ?', 'dièse', 'Point-virgule', '.', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(101, 'python', 10, 'La fonction qui permet de saisir une valeur à la console est ', 'variable = read(\"Texte\")', 'variable = input(\"Texte\")', 'variable = get(\"Texte\")', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(102, 'python', 11, 'Le code qui suit est-il correct pour utiliser la fonction math() ? from math import , print(sqrt(9))', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(103, 'python', 12, 'L\'opérateur === permet-il de comparer 2 number ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(104, 'python', 13, 'Si a est égal à True et b est égal à True print(a && b) affichera True', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(105, 'python', 14, 'for i in range(5): permettra d\'afficher les valeurs suivantes', '1 à 5', '0 à 5', '0 à 4', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(106, 'python', 15, 'Une liste peut être créée soit avec la fonction liste = list() soit ainsi liste = []', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(107, 'python', 16, 'Pour ajouter un élément à une liste via un indice il faut utiliser la fonction insert(élément)', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(108, 'python', 17, 'Pour supprimer un élément dans une liste via son index on utilise la fonction liste.remove(index)', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(109, 'python', 18, 'Les fonctions python accepte des paramètres optionnels', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(110, 'python', 19, 'Les paramètres optionnels doivent être initialisés', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(111, 'python', 20, 'Cette syntaxe de déclaration d\'une fonction est-elle correcte ? nomdelafonction(paramètre1 [= valeur1], paramètre2 [= valeur2], …)', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(112, 'python', 21, 'for i, element in enumerate(t): permet d\'itérer sur une liste', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(113, 'python', 22, 'int(\'F\', 16) renvoie 10', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(114, 'python', 23, 'chaine.lower() renvoie la chaîne de caractères en minuscule', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(115, 'python', 24, 'chaine.len() renvoie la longueur de la chaîne de caractères', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(116, 'python', 25, 'Cette instruction permettra de récupérer les clés d\'un dictionnaire : for cle in dictionnaire:', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(117, 'python', 26, 'Cette déclaration d\'un Set est correcte : s = {valeur1, \"valeur2\" …}', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(118, 'python', 27, 'On définit ainsi une classe : public class NomDeClasse:', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(119, 'python', 28, 'Cet exemple de constructeur d\'une classe est-il correct ? def __init__(self, attribut1 = \"\", attribut2 = \"\"):', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(120, 'python', 29, 'Cet exemple de setter pour une classe est-il correct ? def setAttribut1(self, attribut1):', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(121, 'python', 30, 'Un objet est instancié avec l\'opérateur new ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(122, 'sql', 1, 'Le R de SGBDR signifie', 'Que les tables sont pour la plupart reliées entre elles', 'Que le SGBD implémente SQL', 'Que le SGBD implémente un langage de manipulation qui implémente l\'algèbre relationnelle', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(123, 'sql', 2, 'SQL signifie', 'Structured reQuest Language', 'Structured Query Language', 'Sequential Query Language', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(124, 'sql', 3, 'SQL est divisible en 4 sous-langages (sigles français)', 'LCD, LMD, LCBD, LCT', 'LDD, LGD, LCD, LCT', 'LDD, LMD, LCD, LCT', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(125, 'sql', 4, 'LDD signifie', 'Langage de Définition de Données', 'Langage de Données Définitives', 'Langage Définitionnel des Données', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(126, 'sql', 5, 'LMD signifie', 'Langage de Managment de Données', 'Langage de Manipulation de Données', 'Langage de Modification de Données', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(127, 'sql', 6, 'LCD signifie', 'Langage de Définition de Données', 'Langage de Contraintes des Données', 'Langage de Contrôle de Données', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(128, 'sql', 7, 'LCT signifie', 'Langage de Contrôle des Transactions', 'Langage de Contraintes Temporel', 'Langage de Contraintes Transactionnelles', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(129, 'sql', 8, 'Quel ordre de création d\'une base de données est correct ?', 'CREATE DATABASE IF NOT EXISTS base_exos DEFAULT SET OF CHARACTER  utf8 COLLATE utf8_general_ci', 'CREATE DATABASE base_exos IF NOT EXISTS ', 'CREATE DATABASE IF NOT EXISTS base_exos DEFAULT CHARACTER SET utf8', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(130, 'sql', 9, 'Quel ordre de création d\'un index est correct ? La table nommée \'villes\' possède les colonnes suivantes : id_ville, nom_ville, site, photo, id_pays', 'ALTER TABLE villes ADD INDEX idx_villes_nom_ville (nom_ville), OTHER INDEX i_villes_site(site)', 'ALTER TABLE villes ADD INDEX idx_villes_nom_ville (nom_ville), ADD INDEX i_villes_site(site)', 'CREATE MULTIPLE INDEX idx_villes ON villes(nom_ville, site)', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(131, 'sql', 10, 'Quelle syntaxe de création d\'une view est correct ?', 'CREATE OR REPLACE VIEW nom_de_vue AS SELECT * | colonnes FROM nom_de_table [WITH condition] [AND WITH CHECK OPTION]', 'CREATE OR REPLACE VIEW nom_de_vue AS SELECT * | colonnes FROM nom_de_table [WHERE condition] [WITH CHECK OPTION]', 'DROP AND RECREATE VIEW nom_de_vue AS SELECT * | colonnes FROM nom_de_table [WHERE condition] [WITH CHECK OPTION]', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(132, 'sql', 11, '1e Forme normale', 'Tous les attributs de la relation sont élémentaires et il existe un attribut identifiant.', 'Tous les attributs de la relation sont élémentaires.', 'Une relation possède un attribut identifiant.', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(133, 'sql', 12, '2e Forme normale', 'Chaque attribut de la relation dépend de tout l\'identifiant ou d\'une partie.', 'Le 2e attribut et les suivants dépendent du 1e attribut de la relation', 'Tout attribut dépend de l\'identifiant par une dépendance fonctionnelle (DF) élémentaire.', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(134, 'sql', 13, '3e Forme normale', 'Tout attribut de la relation doit dépendre de l\'attribut identifiant par une DF indirecte', 'Tout attribut de la relation doit dépendre de l\'attribut identifiant par une DF directe', 'Tout attribut doit dépendre de l\'attribut identifiant par une DF multi-valuée', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(135, 'sql', 14, 'Boyce Codd Forme normale', 'Tout élément de l\'identifiant d\'une relation est indépendant d\'un attribut', 'Tout élément de l\'identifiant d\'une relation est dépendant d\'un attribut', 'Tous les éléments de l\'identifiant d\'une relation sont aussi des Foreign Keys', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(136, 'sql', 15, 'Une Primary Key est :', 'Not Null, unique, auto incrémentée, indexée', 'Not Null, unique, indexée', 'Not Null, unique,numérique, indexée', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(137, 'sql', 16, 'Une clé étrangère doit être du même type que la colonne qu\'elle référence', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(138, 'sql', 17, 'Comment créer une clé alternative', 'PRIMARY KEY', 'ALTERNATIVE KEY', 'INDEX UNIQUE', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(139, 'sql', 18, 'Lequel des ordres SQL SELECT est incorrect ? La table est nomée \'produits\' et contient les colonnes suivantes : id_produit, designation, prix, stock, categorie', 'SELECT designation, AVG(prix), categorie FROM produits GROUP BY categorie', 'SELECT AVG(prix), categorie FROM produits GROUP BY categorie', 'SELECT designation, AVG(prix), categorie FROM produits GROUP BY categorie, designation', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(140, 'sql', 19, 'Laquelle de ces clauses ne tire pas partie de l\'index sur la colonne cp', 'ORDER BY cp', 'WHERE cp LIKE \'75%\'', 'WHERE LEFT(cp,2) = \'75\'', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(141, 'sql', 20, 'SELECT c.name FROM customers as c INNER JOIN orders as o ON c.id=o.customer_id Cette requête retourne', 'L\'ensemble des clients', 'Une ligne par client', 'Une ligne par commande', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(142, 'sql', 21, 'Quel type de jointure permet d\'obtenir la liste des personnes possédant ou ne possédant pas de ligne correspondante dans une table des téléphones ?', 'NATURAL JOIN', 'LEFT JOIN', 'INNER JOIN', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(143, 'sql', 22, 'Une auto theta-jointure', 'est une jointure sur la même table avec une condition d\'égalité', 'est une jointure sur la même table sans condition de jointure', 'est une jointure sur la même table avec une condition d\'inégalité', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(144, 'sql', 23, 'Que veut dire ACID ?', 'Atomicity Consistency Isilation Durability', 'Access Consistency Isolation Data ', 'Access Constraint Index Data', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(145, 'sql', 24, 'Quelle commande annule une transaction ?', 'CANCEL', 'ROLLBACK', 'COMMIT', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(146, 'sql', 25, 'CRUD est traduit en SQL par les commandes suivantes :', 'CREATE, SELECT, UPDATE, DELETE', 'CREATE, READ, UPDATE, DROP', 'INSERT, SELECT,  UPDATE, DELETE', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(147, 'sql', 26, 'Une clef étrangère doit faire l\'objet d\'une contrainte d\'unicité', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(148, 'sql', 27, 'Une contrainte de clé primaire se traduit par', 'NOT NULL', 'Un type numérique auto incrémenté', 'PRIMARY KEY', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(149, 'sql', 28, 'Quelle serait la clé primaire d\'une table d\'association ?', 'Une colonne numérique auto incrémentée', 'Une clé composée de toutes les clés étrangères', 'Une table d\'association n\'a pas besoin de clé primaire', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(150, 'sql', 29, 'Une table peut ne pas avoir de clé primaire ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(151, 'sql', 30, 'MySQL autorise l\'insertion de plusieurs enregistements en même temps', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(152, 'sql', 31, 'Un ordre INSERT ne nécessite pas de lister les colonnes', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(153, 'sql', 32, 'Une VIEW est', 'Un ordre SQL quelconque stocké dans la BD', 'Un ordre SELECT stocké dans la BD', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(154, 'sql', 33, 'Est-il possible de supprimer des données à partir d\'une view qui contient un ordre SELECT ?', 'Oui, à condition que le SELECT soit mono-table', 'Oui, à condition que dans le SELECT de jointure toutes les colonnes soient présentes', 'Non, c\'est impossible', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(155, 'sql', 34, 'Est-il possible de filtrer les données à insérer via un VIEW ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(156, 'sql', 35, 'La commande DELETE FROM nom_de_table supprime tous les enregistrements d\'une table et réinitialise le compteur de la clé primaire si c\'est un int auto-increment', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(157, 'sql', 36, 'La commande TRUNCATE nom_de_table supprime la partie de la table à partir de l\'enregistrement spécifié dans la clause WHERE', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(158, 'sql', 37, 'Une table peut avoir plusieurs clés primaires à condition qu\'aucune des colonnes ne soient de type int auto-incrément', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(159, 'sql', 38, 'Pour créer un index sur plusieurs colonnes il faut que les différentes colonnes soient de mêmes types', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(160, 'sql', 39, 'Pour réaliser une jointure il faut que les colonnes de jointure soient indexées', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(161, 'sql', 40, 'Une procédure stockée MySQL est ', 'un mélange de code SQL stocké sur le serveur et de code procédural stocké dans une application cliente', 'du code procédural stocké sur un serveur et associé à des requêtes stockées', 'un mélange de code SQL et de code procédural stocké sur un serveur', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(162, 'sql', 41, 'Une fonction stockée MySQL accepte des paramètres IN, OUT et INOUT', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(163, 'sql', 42, 'Une fonction stockée MySQL accepte des paramètres IN, OUT', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(164, 'sql', 43, 'Un paramètre de direction IN correpond à ', 'un passage de paramètre par valeur ', 'un passage de paramètre par référence', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(165, 'sql', 44, 'Les types des paramètres des procédures sont exactement les mêmes que ceux des définitions des tables', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(166, 'sql', 45, 'Un clé étrangère est nécessaire pour effectuer une jointure', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(167, 'sql', 46, 'Une table peut posséder une Foreign Key sur plusieurs colonnes', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(168, 'sql', 47, 'Les tables de moteur MyISAM gèrent les clés étrangères et les transactions', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(169, 'sql', 48, 'Les tables de moteur InnoBD gèrent les clés étrangères et les transactions', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(170, 'sql', 49, 'Un trigger est un déclencheur', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(171, 'sql', 50, 'Les types de triggers sont les suivants', 'BeforeInsert, BeforeDelete, BeforeUpdate, AfterInsert, AfterDelete, AfterUpdate', 'BeforeInsert, BeforeDelete, BeforeUpdate, BeforeSelect, AfterInsert, AfterDelete, AfterUpdate, AfterSelect', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(172, 'cassandra', 1, 'Cassandra est un SGBD de type ?', 'Clé/valeur', 'Document', 'Colonnes', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(173, 'cassandra', 2, 'Pour créer une Base de Données Cassandra il faut exécuter la commande suivante', 'CREATE DATABASE database_name WITH REPLICATION = {\'class\' : \'SimpleStrategy\', \'replication_factor\' : N } } ', 'CREATE KEYSPACE database_name WITH REPLICATION = {\'class\' : \'SimpleStrategy\', \'replication_factor\' : N } } ', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(174, 'cassandra', 3, 'Après avoir créé un KeySpace Cassandra nommé \'examen\' on crée une table avec la commande suivante : CREATE TABLE examen.villes (id_ville int PRIMARY KEY,nom_ville varchar,id_pays text) Est-ce correct ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(175, 'cassandra', 4, 'DESCRIBE nom_de_table de Cassandra affiche la structure d\'une table', 'vrai', 'faux', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(176, 'cassandra', 5, 'DESCRIBE tables de Cassandra affiche la liste des tables d\'un KeySpace', 'vrai', 'faux', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(177, 'cassandra', 6, 'Avec Cassandra INSERT INTO nomDeTable(col1, col2, ...) VALUES(\'val1\', \'val2\', ...) Cette commande permet-elle d\'insérer une ligne dans une table ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(178, 'cassandra', 7, 'Avec Cassandra on insère 7 villes dans la table villes. Par exemple : INSERT INTO examen.villes(id_ville, nom_ville, id_pays) VALUES(1, \'Paris\', \'fr\') Jusqu\'à 7 ... Que fait la commande suivante : SELECT * FROM villes', 'Elle affiche les 5 premières villes', 'Elle affiche toutes les villes', 'Elle affiche un message d\'erreur', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(179, 'cassandra', 8, 'Avec Cassandra qu\'affiche la commande suivante : SELECT * FROM villes WHERE id_ville IN(1,2)', 'Elle affiche les 2 premières villes', 'Elle affiche un warning', 'Elle affiche un message d\'erreur', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(180, 'cassandra', 9, 'Avec Cassandra qu\'affiche la commande suivante : SELECT * FROM villes WHERE id_ville > 2', 'Elle affiche les villes dont l\'id est supérieur à 2', 'Elle affiche un warning', 'Elle affiche un message d\'erreur', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(181, 'cassandra', 10, 'Avec Cassandra qu\'affiche la commande suivante : SELECT * FROM villes WHERE id_ville > 2 ALLOW FILTERING ', 'Elle affiche les villes dont l\'id est supérieur à 2', 'Elle affiche un warning', 'Elle affiche un message d\'erreur', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(182, 'mongodb', 1, 'MongoDB est un SGBD', 'Paire clé/valeur', 'Document', 'Colonne', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(183, 'mongodb', 2, 'MongoDB stocke ses données au format', 'BSON', 'JSON', 'XML', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(184, 'mongodb', 3, 'Quelle commande affiche la liste des bases de données ?', 'show databases', 'show dbs', 'display dbs', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(185, 'mongodb', 4, 'MongoDB stocke les données dans ', 'des tables', 'des dossiers', 'des collections', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(186, 'mongodb', 5, 'Les bases de données MongoDB ont un schéma ', 'dynamique', 'statique', 'volatile', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(187, 'mongodb', 6, 'MongoDB supporte les triggers ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(188, 'mongodb', 7, 'MongoDB supporte les écritures concurrentes ?', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(189, 'mongodb', 8, 'Comment créer une base de données nommée myBase avec MongoDB ?', 'CREATE DATABASE myBase', 'NEW myBase', 'USE myBase', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(190, 'mongodb', 9, 'Que contient une collection de MongoDB ?', 'des documents', 'des tables', 'des colonnes', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(191, 'mongodb', 10, 'Laquelle de ces requêtes est correcte avec MongoDB ?', 'db.livres.find({})', 'db.livres.fetchAll()', 'db.livres.select({})', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(192, 'mongodb', 11, 'Avec MongoDB pour trier un résultat par prix il faut utiliser la syntaxe suivante', 'orderBy(prix)', 'order({prix})', 'sort({prix:1})', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(193, 'mongodb', 12, 'Avec MongoDB pour limiter une requête aux 3 premiers résultats il faut utiliser la syntaxe suivante', 'limit(3)', 'limit(0,3)', 'max(3)', '', 0);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(194, 'mongodb', 13, 'Quel est le port par défaut du serveur MongoDB ?', '3306', '12701', '27017', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(195, 'mongodb', 14, 'Map reduce est une technique', 'de compression', 'de géolocalisation', 'd\'agrégation', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(196, 'mongodb', 15, 'Avec MongoDB dans une requête de sélection, la projection est', 'en premier argument', 'en second argument', 'en troisième argument', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(197, 'mongodb', 16, 'Avec MongoDB les opérations d\'écriture sont atomiques au niveau', 'du document', 'de la collection', 'de la table', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(198, 'mongodb', 17, 'Généralement, les données gérées par MongoDB sont', 'Normalisées', 'Dénormalisées', 'Relationnelles', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(199, 'mongodb', 18, 'Avec MongoDB quel champ est utilisé comme identifiant unique ?', '_id', '_uid', '_uuid', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(200, 'mongodb', 19, 'Quelle est la commande permettant d\'ajouter un élément à une collection MongoDB ?', 'add', 'create', 'insert', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(201, 'mongodb', 20, 'Laquelle de ces méthodes retourne un curseur avec Avec MongoDB ?', 'find', 'fetch', 'skip', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(202, 'mongodb', 21, 'Quelle est la syntaxe correcte pour extraire un document MongoDB via son _id ?', 'db.collection.find({\"_id\" : \"id\"}) ', 'db.collection.find({\"_id\" : GetId(\"id\")}) ', 'db.collection.find({\"_id\" : ObjectId(\"id\")}) ', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(203, 'mongodb', 22, 'Quelle est la syntaxe correcte pour récupérer le nombre de documents d\'une collection MongoDB ?', 'db.collection.count()', 'db.collection.size()', 'db.collection.number()', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(204, 'mongodb', 23, 'Quelle est la commande qui permet de renommer une collection MongoDB ?', 'db.nomDeLaCollection.renameCollection(\"nouveauNom\")', 'db.nomDeLaCollection.rename(\"nouveauNom\")', 'db.collections.renameCollection(\"ancienNom\", \"nouveauNom\")', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(205, 'mongodb', 24, 'Quelle est la commande qui permet de supprimer une collection MongoDB ?', 'db.NomDeCollection.drop()', 'db.NomDeCollection.delete()', 'db.NomDeCollection.remove()', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(206, 'mongodb', 25, 'Que fait cette commande MongoDB ? db.personnes.find({ }).projection( { _id : 0, nom : 1, prenom : 1} ) ?', 'Elle affiche tous les documents et dans ces documents affiche l\'_id (qui ne sera pas modifiable), le nom et le prénom', 'Elle affiche tous les documents et dans ces documents affiche le nom et le prénom', 'Elle affiche tous les documents et dans ces documents affiche un zéro à la place de l\'_id, le nom et le prénom', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(207, 'mongodb', 26, 'Que fait cette instruction MongoDB ? db.personnes.find().sort( { nom: -1 } ) ?', 'Elle trie la collection sans afficher le nom', 'Elle ne trie pas, les collections sont potentiellement trop volumineuses', 'Elle trie la collection sur le nom en ordre descendant', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(208, 'mongodb', 27, 'Avec MongoDB quelle est la bonne syntaxe pour afficher les noms des personnes sans doublon ?', 'db.personnes.distinct( \'nom\' )', 'db.personnes.find( \'nom\' ).distinct()', 'db.personnes.find( \'distinct nom\' )', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(209, 'mongodb', 28, 'Avec MongoDB dans un document de la collection \'personnes\' ayant les attributs _id, nom, prenom, age, email, que va faire cette instruction ? db.personnes.update( { nom: \"Milou\" }, { prenom: \"Dog\" } ) ?', 'Modifier le prénom de Milou', 'Modifier le prénom de Milou et supprimer les attributs nom, age, email', 'Modifier le nom de la personne dont le prénom est \"Dog\"', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(210, 'mongodb', 29, 'Avec MongoDB que font ces 2 instructions ? db.users.update({ nom:\"Roux\" },{ $push: { roles: {codeRole:\"1\"} } } ) puis db.users.update({ nom:\"Roux\" },{ $pull: { roles: {codeRole:\"1\"} } } ) ?', 'Successivement elles créent et suppriment un élément d\'un tableau de rôles dans un objet de la collection \'users\'', 'Successivement elles créent un élément dans un tableau de rôles au début du tableau puis à la fin du tableau dans un objet de la collection \'users\'', 'Successivement elles suppriment et créent un élément d\'un tableau de rôles dans un objet de la collection \'users\'', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(211, 'mongodb', 30, 'Avec MongoDB quelle est la commande à utiliser pour créer un index unique dans une collection nommée \'pays\' ayant des documents avec un attribut nommé \'nomPays\' ?', 'db.pays.createUniqueIndex( { nomPays: 1 }, { name :\"idxUniqueNomPays\"} )', 'db.pays.createIndex( { nomPays: 1 }, { name :\"idxUniqueNomPays\", unique :true } )', 'db.pays.createUniqueIndex( { nomPays: 1 }, { indexName :\"idxUniqueNomPays\"} )', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(213, 'big_data_generalites', 1, 'BigData et NoSQL sont une seule et même chose ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(214, 'big_data_generalites', 2, 'NoSQL signifie NOT SQL ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(215, 'big_data_generalites', 3, 'CAP signifie ?', 'Coherence Accuracy Performance', 'Consistency Availibility Partition', 'Calculus Agregation Partition', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(216, 'big_data_generalites', 4, 'Quels sont les 3 facteurs des Big Data ?', 'Tuning Variety Velocity', 'Volume Variety Viscosity', 'Volume Variety Velocity', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(217, 'big_data_generalites', 5, 'Que privilégie le Big data ?', 'La scalabilité horizontale', 'La scalabilité verticale', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(218, 'big_data_generalites', 6, 'Sqoop est une interface en ligne de commande qui permet de transférer des données entre des bases de données relationnelles et Hadoop', 'oui', 'non', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(219, 'big_data_generalites', 7, 'MapReduce a été inventé par …', 'Apache Software Foundation', 'Google', 'Microsoft', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(220, 'big_data_generalites', 8, 'MapReduce signifie …', 'On crée une carte et on autorise un redimensionnement', 'On crée un Map (Clé/Valeur) et on élimine des clés par restriction (un WHERE)', 'On répartit les traitements sur plusieurs serveurs ', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(221, 'big_data_generalites', 9, 'Les bases de données NoSQL sont très adaptées à la gestion des transactions', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(222, 'big_data_generalites', 10, 'Les bases NoSQL sont efficaces pour gérer des données …', 'non structurées', 'semi structurées', 'structurées', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(223, 'neo4j', 1, 'Neo4J est un SGBD', 'Document', 'Colonne', 'Graphe', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(224, 'neo4j', 2, 'Lequel de ces objets n\'existe pas dans Neo4J ?', 'Noeud', 'Colonne', 'Lien', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(225, 'neo4j', 3, 'Laquelle de ces applications utilise Neo4J ?', 'Réseau Social', 'Virement bancaire', 'Blog', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(226, 'neo4j', 4, 'Dans Neo4J les relations sont créées à l\'exécution des requêtes ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(227, 'neo4j', 5, 'Dans Neo4J une propriété ne peut être attachée que sur un noeud ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(228, 'neo4j', 6, 'Comment s\'appelle le langage de requête de Neo4J ?', 'SQL', 'DQL', 'CQL', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(229, 'neo4j', 7, 'Peut-on facilement fragmenter un graphe Neo4j sur plusieurs serveurs ?', 'oui', 'non', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(230, 'neo4j', 8, 'Avec Neo4j la commande SET permet de …', 'Ajouter une propriété à un objet', 'Définir une variable d\'environnement', 'Définir une option de configuration', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(231, 'neo4j', 9, 'Pour sélectionner des données avec Neo4J il faut utiliser la commande suivante …', 'SELECT', 'MATCH', 'RETRIEVE', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(232, 'neo4j', 10, 'Laquelle de ces fonctions d\'agrégation n\'existe pas dans Neo4J ?', 'AVG', 'COLLECT', 'STD', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(233, 'redis', 1, 'Redis est un SGBD clé-valeur mémoire', 'vrai', 'faux', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(234, 'redis', 2, 'Redis ne fonctionne que sur Unix', 'vrai', 'faux', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(235, 'redis', 3, 'Une Base de Données Redis est stockée dans un fichier nommé ?', 'nomDeBD.rdb c\'est l\'administrateur qui donne le nom du fichier, pas l\'extension', 'dump.rdb', 'rdb.dat', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(236, 'redis', 4, 'Toute la base de données Redis est aussi stockée en mémoire', 'vrai', 'faux', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(237, 'redis', 5, 'La BD Redis est mémoire et par défaut est stockée sur le disque dur toutes les minutes', 'vrai', 'faux', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(238, 'redis', 6, 'Tous les types de Redis sont cités dans cette liste : String, List, Set, Hash, Bitmap et HyperLogLogs', 'vrai', 'faux', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(239, 'redis', 7, 'Les membres d\'une List Redis sont obligatoirement des Strings', 'vrai', 'faux', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(240, 'redis', 8, 'L\'affectation d\'une valeur à une clé Redis de type String utilise l\'instruction setKey(clé, valeur)', 'vrai', 'faux', '', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(241, 'redis', 9, 'Une valeur dans un SET Redis est unique', 'vrai', 'faux', '', '', 1);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(242, 'redis', 10, 'Quelle est la commande qui permet d\'ajouter une valeur dans un SortedSet de Redis ?', 'ZINSERT ensemble indice valeur', 'ZADDLAST ensemble indice valeur', 'ZADD ensemble indice valeur', '', 3);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(243, 'redis', 11, 'Quelle est la commande qui permet d\'ajouter une paire dans un Hash de Redis ?', 'HADD nomDuHash clé valeur', 'HSET nomDuHash clé valeur', 'HINSERT nomDuHash clé valeur', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(244, 'redis', 12, 'Quelle est la commande qui permet d\'afficher le nombre d\'éléments d\'une liste de Redis ?', 'GETLEN liste', 'LLEN liste', 'LLENGTH liste', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(245, 'redis', 13, 'Quelle est la commande qui permet de supprimer le dernier élément d\'une liste de Redis ?', 'REMPOP liste', 'RPOP liste', 'DELLAST liste', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(246, 'redis', 14, 'Quelle est la commande qui permet de lister toutes les clés de Redis ?', 'GET ALL KEYS', 'keys *', 'KEYS ALL', '', 2);
INSERT INTO questions (id_question, qcm, rang, question, reponse_1, reponse_2, reponse_3, blanc, bonne_reponse) VALUES(247, 'redis', 15, 'Pour vider une base de données Redis il faut utiliser la commande', 'DROP nom_de_bd', 'DELALL', 'FLUSHALL', '', 3);

INSERT INTO stages (stage) VALUES('CDA');
INSERT INTO stages (stage) VALUES('DW');
INSERT INTO stages (stage) VALUES('DWWM');
INSERT INTO stages (stage) VALUES('TAI');

SET FOREIGN_KEY_CHECKS=1;

COMMIT;

